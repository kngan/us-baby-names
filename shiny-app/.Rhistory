getwd()
setwd("C:/Users/kngan/Documents/Projects/us-baby-names/us-baby-names/raw_txt")
install.packages("data.table")
library(data.table)
dt = do.call(rbind, lapply(files, fread))
files = list.files(pattern="*.TXT")
dt = do.call(rbind, lapply(files, fread))
names(dt) <- c("state", "sex", "year", "name", "count")
dt$state <- as.factor(dt$state)
dt$sex <- as.factor(dt$sex)
dt$year <- as.factor(dt$year)
dt$name <- as.factor(dt$name)
str(files)
str(dt)
# install packages and load
doInstall <- TRUE
toInstall <- c("data.table","maps", "ggplot2")
if(doInstall){install.packages(toInstall, repos = "http://cran.us.r-project.org")}
lapply(toInstall, library, character.only = TRUE)
library(data.table)
library(ggplot2)
library(maps)
install.packages("ggplot2")
install.packages("maps")
library(ggplot2)
library(maps)
head(dt)
all_states <- map_data("state")
str(all_states)
all_states
head(dt)
str(all_states)
str(dt)
fread("state_to_abbrev.txt")
state_to_abbrev <- fread("state_to_abbrev.txt")
str(state_to_abbrev)
str(all_states)
all_states
foot(all_states)
str(all_states)
state_to_abbrev <- fread("state_to_abbrev.txt")
str(state_to_abbrev)
state_to_abbrev <- fread("state_to_abbrev.txt")
str(state_to_abbrev)
all_states_w_abbrev <- merge(all_states, state_to_abbrev, by="region")
all_states_w_abbrev
total <- merge(all_states_w_abbrev, dt, by="region")
str(all_states)
str(all_states_w_abbrev)
str(dt)
dt$region <- dt$state
str(dt)
state_to_abbrev <- fread("state_to_abbrev.txt")
all_states_w_abbrev <- merge(all_states, state_to_abbrev, by="region")
total <- merge(all_states_w_abbrev, dt, by="state")
str(all_states)
str(all_states_w_abbrev)
str(dt)
files = list.files(pattern="*.csv")
dt = do.call(rbind, lapply(files, fread))
# name variables and change to factors
names(dt) <- c("state", "sex", "year", "name", "count")
dt$state <- as.factor(dt$state)
dt$sex <- as.factor(dt$sex)
dt$year <- as.factor(dt$year)
dt$name <- as.factor(dt$name)
str(dt)
files = list.files(pattern="*.csv")
files
files = list.files(pattern="*.TXT")
files
dt = do.call(rbind, lapply(files, fread))
# name variables and change to factors
names(dt) <- c("state", "sex", "year", "name", "count")
dt$state <- as.factor(dt$state)
dt$sex <- as.factor(dt$sex)
dt$year <- as.factor(dt$year)
dt$name <- as.factor(dt$name)
all_states <- map_data("state")
all_states_w_abbrev <- merge(all_states, state_to_abbrev, by="region")
total <- merge(all_states_w_abbrev, dt, by="state")
files = list.files(pattern="*.TXT")
dt = do.call(rbind, lapply(files, fread))
# name variables and change to factors
names(dt) <- c("state", "sex", "year", "name", "count")
dt$sex <- as.factor(dt$sex)
dt$year <- as.factor(dt$year)
dt$name <- as.factor(dt$name)
total <- merge(all_states_w_abbrev, dt, by="state")
str(dt)
str(all_states_w_abbrev)
dt_no_dc <- dt[dt$state!="DC",]
str(dt_no_dc)
total <- merge(all_states_w_abbrev, dt_no_dc, by="state")
dt_no_dc <- dt[dt$state=="AK",]
total <- merge(all_states_w_abbrev, dt_no_dc, by="state")
dt_no_dc <- dt[dt$state!="DC",]
all_states <- map_data("state")
all_states_w_abbrev <- merge(all_states, state_to_abbrev, by="region")
total <- merge(dt_no_dc, all_states_w_abbrev, by="state")
# pick a name and a year
dt_no_dc <- dt[dt$name=="Kayla"$year==1993,]
# pick a name and a year
dt_no_dc <- subset(dt, name=="Kayla" & year==1993)
all_states <- map_data("state")
all_states_w_abbrev <- merge(all_states, state_to_abbrev, by="region")
# pick a name and a year
selected_name_and_yr <- subset(dt, name=="Kayla" & year==1993)
total <- merge(all_states_w_abbrev, selected_name_and_yr, by="state")
head(Total)
head(total)
head(total)
total
str(total)
total <- merge(all_states_w_abbrev, selected_name_and_yr, by="state")
head(total)
str(total)
p <- ggplot()
p <- p + geom_polygon(data=Total, aes(x=long, y=lat, group = group, fill=total$count),colour="white"
) + scale_fill_continuous(low = "thistle2", high = "darkred", guide="colorbar")
P1 <- p + theme_bw()  + labs(fill = "Black to White Incarceration Rates \n Weighted by Relative Population"
,title = "State Incarceration Rates by Race, 2010", x="", y="")
P1 + scale_y_continuous(breaks=c()) + scale_x_continuous(breaks=c()) + theme(panel.border =  element_blank())
p <- p + geom_polygon(data=total, aes(x=long, y=lat, group = group, fill=total$count),colour="white"
) + scale_fill_continuous(low = "thistle2", high = "darkred", guide="colorbar")
P1 <- p + theme_bw()  + labs(fill = "Black to White Incarceration Rates \n Weighted by Relative Population"
,title = "State Incarceration Rates by Race, 2010", x="", y="")
P1 + scale_y_continuous(breaks=c()) + scale_x_continuous(breaks=c()) + theme(panel.border =  element_blank())
p <- p + geom_polygon(data=total, aes(x=long, y=lat, group = group, fill=total$count),colour="white"
) + scale_fill_continuous(low = "thistle2", high = "darkred", guide="colorbar")
P1 <- p + theme_bw()  + labs(fill = "New Births with NAME"
,title = "Prevalence of NAME in YEAR", x="", y="")
P1 + scale_y_continuous(breaks=c()) + scale_x_continuous(breaks=c()) + theme(panel.border =  element_blank())
total <- total[order(total$order),]
p <- ggplot()
p <- p + geom_polygon(data=total, aes(x=long, y=lat, group = group, fill=total$count),colour="white"
) + scale_fill_continuous(low = "thistle2", high = "darkred", guide="colorbar")
P1 <- p + theme_bw()  + labs(fill = "New Births with NAME"
,title = "Prevalence of NAME in YEAR", x="", y="")
P1 + scale_y_continuous(breaks=c()) + scale_x_continuous(breaks=c()) + theme(panel.border =  element_blank())
p <- ggplot()
p <- p + geom_polygon(data=total, aes(x=long, y=lat, group = group, fill=total$count),colour="white"
) + scale_fill_continuous(low = "thistle2", high = "darkred", guide="colorbar")
P1 <- p + theme_bw()  + labs(fill = "New Births with NAME"
,title = "Count of NAME in YEAR", x="", y="")
P1 + scale_y_continuous(breaks=c()) + scale_x_continuous(breaks=c()) + theme(panel.border =  element_blank())
selected_name_and_yr <- subset(dt, name=="Kayla" & year==2010)
total <- merge(all_states_w_abbrev, selected_name_and_yr, by="state")
total <- total[order(total$order),]
p <- ggplot()
p <- p + geom_polygon(data=total, aes(x=long, y=lat, group = group, fill=total$count),colour="white"
) + scale_fill_continuous(low = "thistle2", high = "darkred", guide="colorbar")
P1 <- p + theme_bw()  + labs(fill = "New Births with NAME"
,title = "Count of NAME in YEAR", x="", y="")
P1 + scale_y_continuous(breaks=c()) + scale_x_continuous(breaks=c()) + theme(panel.border =  element_blank())
# pick a name and a year
selected_name_and_yr <- subset(dt, name=="Austin" & year==2010)
total <- merge(all_states_w_abbrev, selected_name_and_yr, by="state")
total <- total[order(total$order),]
p <- ggplot()
p <- p + geom_polygon(data=total, aes(x=long, y=lat, group = group, fill=total$count),colour="white"
) + scale_fill_continuous(low = "thistle2", high = "darkred", guide="colorbar")
P1 <- p + theme_bw()  + labs(fill = "New Births with NAME"
,title = "Count of NAME in YEAR", x="", y="")
P1 + scale_y_continuous(breaks=c()) + scale_x_continuous(breaks=c()) + theme(panel.border =  element_blank())
str(dt)
selected_name_and_yr <- subset(dt, name=="Aayla" & year==2010)
total <- merge(all_states_w_abbrev, selected_name_and_yr, by="state")
total <- total[order(total$order),]
p <- ggplot()
p <- p + geom_polygon(data=total, aes(x=long, y=lat, group = group, fill=total$count),colour="white"
) + scale_fill_continuous(low = "thistle2", high = "darkred", guide="colorbar")
P1 <- p + theme_bw()  + labs(fill = "New Births with NAME"
,title = "Count of NAME in YEAR", x="", y="")
P1 + scale_y_continuous(breaks=c()) + scale_x_continuous(breaks=c()) + theme(panel.border =  element_blank())
selected_name_and_yr <- subset(dt, name=="Kaia" & year==2010)
total <- merge(all_states_w_abbrev, selected_name_and_yr, by="state")
total <- total[order(total$order),]
p <- ggplot()
p <- p + geom_polygon(data=total, aes(x=long, y=lat, group = group, fill=total$count),colour="white"
) + scale_fill_continuous(low = "thistle2", high = "darkred", guide="colorbar")
P1 <- p + theme_bw()  + labs(fill = "New Births with NAME"
,title = "Count of NAME in YEAR", x="", y="")
P1 + scale_y_continuous(breaks=c()) + scale_x_continuous(breaks=c()) + theme(panel.border =  element_blank())
picked_name <- "Kaia"
picked_year <- 2010
picked_sex <- "F"
selected_name_and_yr <- subset(dt, name==picked_name & year==picked_year & sex==picked_sex)
total <- merge(all_states_w_abbrev, selected_name_and_yr, by="state")
total <- total[order(total$order),]
total <- merge(all_states_w_abbrev, selected_name_and_yr, by="state")
# plot
# sort so plots without the lines in the map
total <- total[order(total$order),]
p <- ggplot()
p <- p + geom_polygon(data=total, aes(x=long, y=lat, group = group, fill=total$count),colour="white"
) + scale_fill_continuous(low = "thistle2", high = "darkred", guide="colorbar")
P1 <- p + theme_bw()  + labs(fill = "New Births with NAME"
,title = "Count of NAME in YEAR", x="", y="")
P1 + scale_y_continuous(breaks=c()) + scale_x_continuous(breaks=c()) + theme(panel.border =  element_blank())
# TODO: normalize?
picked_name <- "Austin"
picked_year <- 2010
picked_sex <- "F"
selected_name_and_yr <- subset(dt, name==picked_name & year==picked_year & sex==picked_sex)
total <- merge(all_states_w_abbrev, selected_name_and_yr, by="state")
# plot
# sort so plots without the lines in the map
total <- total[order(total$order),]
p <- ggplot()
p <- p + geom_polygon(data=total, aes(x=long, y=lat, group = group, fill=total$count),colour="white"
) + scale_fill_continuous(low = "thistle2", high = "darkred", guide="colorbar")
P1 <- p + theme_bw()  + labs(fill = "New Births with NAME"
,title = "Count of NAME in YEAR", x="", y="")
P1 + scale_y_continuous(breaks=c()) + scale_x_continuous(breaks=c()) + theme(panel.border =  element_blank())
# TODO: normalize?
picked_name <- "Austin"
picked_year <- 1990
picked_sex <- "F"
selected_name_and_yr <- subset(dt, name==picked_name & year==picked_year & sex==picked_sex)
total <- merge(all_states_w_abbrev, selected_name_and_yr, by="state")
# plot
# sort so plots without the lines in the map
total <- total[order(total$order),]
p <- ggplot()
p <- p + geom_polygon(data=total, aes(x=long, y=lat, group = group, fill=total$count),colour="white"
) + scale_fill_continuous(low = "thistle2", high = "darkred", guide="colorbar")
P1 <- p + theme_bw()  + labs(fill = "New Births with NAME"
,title = "Count of NAME in YEAR", x="", y="")
P1 + scale_y_continuous(breaks=c()) + scale_x_continuous(breaks=c()) + theme(panel.border =  element_blank())
# TODO: normalize?
# pick a name and a year and a gender
picked_name <- "Austin"
picked_year <- 1990
picked_sex <- "M"
selected_name_and_yr <- subset(dt, name==picked_name & year==picked_year & sex==picked_sex)
total <- merge(all_states_w_abbrev, selected_name_and_yr, by="state")
# plot
# sort so plots without the lines in the map
total <- total[order(total$order),]
p <- ggplot()
p <- p + geom_polygon(data=total, aes(x=long, y=lat, group = group, fill=total$count),colour="white"
) + scale_fill_continuous(low = "thistle2", high = "darkred", guide="colorbar")
P1 <- p + theme_bw()  + labs(fill = "New Births with NAME"
,title = "Count of NAME in YEAR", x="", y="")
P1 + scale_y_continuous(breaks=c()) + scale_x_continuous(breaks=c()) + theme(panel.border =  element_blank())
# TODO: normalize?
p <- ggplot()
p <- p + geom_polygon(data=total, aes(x=long, y=lat, group = group, fill=total$count),colour="white"
) + scale_fill_continuous(low = "thistle2", high = "darkred", guide="colorbar")
P1 <- p + theme_bw()  + labs(fill = "New Births"
,title = "Count of Name "&picked_name&"("&picked_sex&") in "&picked_year, x="", y="")
P1 + scale_y_continuous(breaks=c()) + scale_x_continuous(breaks=c()) + theme(panel.border =  element_blank())
# TODO: normalize?
# TODO: pick "both" for gender
p <- ggplot()
p <- p + geom_polygon(data=total, aes(x=long, y=lat, group = group, fill=total$count),colour="white"
) + scale_fill_continuous(low = "thistle2", high = "darkred", guide="colorbar")
P1 <- p + theme_bw()  + labs(fill = "New Births"
,title = paste("Count of Name ",picked_name," (",picked_sex,") in ",picked_year), x="", y="")
P1 + scale_y_continuous(breaks=c()) + scale_x_continuous(breaks=c()) + theme(panel.border =  element_blank())
P1 <- p + theme_bw()  + labs(fill = "New Births"
,title = paste("Count of Name",picked_name,"(",picked_sex,") in ",picked_year), x="", y="")
P1 + scale_y_continuous(breaks=c()) + scale_x_continuous(breaks=c()) + theme(panel.border =  element_blank())
# TODO: normalize?
# TODO: pick "both" for gender
P1 <- p + theme_bw()  + labs(fill = "New Births"
,title = paste("Count of Name",picked_name,"(",picked_sex,") in",picked_year), x="", y="")
P1 + scale_y_continuous(breaks=c()) + scale_x_continuous(breaks=c()) + theme(panel.border =  element_blank())
# TODO: normalize?
# TODO: pick "both" for gender
picked_year <- 1980
picked_sex <- "M"
selected_name_and_yr <- subset(dt, name==picked_name & year==picked_year & sex==picked_sex)
total <- merge(all_states_w_abbrev, selected_name_and_yr, by="state")
# plot
# sort so plots without the lines in the map
total <- total[order(total$order),]
p <- ggplot()
p <- p + geom_polygon(data=total, aes(x=long, y=lat, group = group, fill=total$count),colour="white"
) + scale_fill_continuous(low = "thistle2", high = "darkred", guide="colorbar")
P1 <- p + theme_bw()  + labs(fill = "New Births"
,title = paste("Count of Name",picked_name,"(",picked_sex,") in",picked_year), x="", y="")
P1 + scale_y_continuous(breaks=c()) + scale_x_continuous(breaks=c()) + theme(panel.border =  element_blank())
# pick a name and a year and a gender
picked_name <- "Alia"
picked_year <- 1980
picked_sex <- "F"
selected_name_and_yr <- subset(dt, name==picked_name & year==picked_year & sex==picked_sex)
total <- merge(all_states_w_abbrev, selected_name_and_yr, by="state")
# plot
# sort so plots without the lines in the map
total <- total[order(total$order),]
p <- ggplot()
p <- p + geom_polygon(data=total, aes(x=long, y=lat, group = group, fill=total$count),colour="white"
) + scale_fill_continuous(low = "thistle2", high = "darkred", guide="colorbar")
P1 <- p + theme_bw()  + labs(fill = "New Births"
,title = paste("Count of Name",picked_name,"(",picked_sex,") in",picked_year), x="", y="")
P1 + scale_y_continuous(breaks=c()) + scale_x_continuous(breaks=c()) + theme(panel.border =  element_blank())
total <- total[order(total$order),]
p <- ggplot()
p <- p + geom_polygon(data=total, aes(x=long, y=lat, group = group, fill=total$count),colour="white"
) + scale_fill_distiller(palette="Blues")
P1 <- p + theme_bw()  + labs(fill = "New Births"
,title = paste("Count of Name",picked_name,"(",picked_sex,") in",picked_year), x="", y="")
P1 + scale_y_continuous(breaks=c()) + scale_x_continuous(breaks=c()) + theme(panel.border =  element_blank())
total <- total[order(total$order),]
p <- ggplot()
p <- p + geom_polygon(data=total, aes(x=long, y=lat, group = group, fill=total$count),colour="white"
) + scale_fill_distiller(palette="Blues", breaks = pretty_breaks(n = 10)) +
guides(fill = guide_legend(reverse = TRUE))
P1 <- p + theme_bw()  + labs(fill = "New Births"
,title = paste("Count of Name",picked_name,"(",picked_sex,") in",picked_year), x="", y="")
P1 + scale_y_continuous(breaks=c()) + scale_x_continuous(breaks=c()) + theme(panel.border =  element_blank())
total <- total[order(total$order),]
p <- ggplot()
p <- p + geom_polygon(data=total, aes(x=long, y=lat, group = group, fill=total$count),colour="white"
) + scale_fill_distiller(palette="Blues",breaks = pretty_breaks(n = 10))
P1 <- p + theme_bw()  + labs(fill = "New Births"
,title = paste("Count of Name",picked_name,"(",picked_sex,") in",picked_year), x="", y="")
P1 + scale_y_continuous(breaks=c()) + scale_x_continuous(breaks=c()) + theme(panel.border =  element_blank())
p <- ggplot()
p <- p + geom_polygon(data=total, aes(x=long, y=lat, group = group, fill=total$count),colour="white"
) + scale_fill_distiller(palette="Blues")
P1 <- p + theme_bw()  + labs(fill = "New Births"
,title = paste("Count of Name",picked_name,"(",picked_sex,") in",picked_year), x="", y="")
P1 + scale_y_continuous(breaks=c()) + scale_x_continuous(breaks=c()) + theme(panel.border =  element_blank())
total <- total[order(total$order),]
p <- ggplot()
p <- p + geom_polygon(data=total, aes(x=long, y=lat, group = group, fill=total$count),colour="white"
) + scale_fill_distiller(palette="Blues") +  guides(fill = guide_legend(reverse = TRUE))
P1 <- p + theme_bw()  + labs(fill = "New Births"
,title = paste("Count of Name",picked_name,"(",picked_sex,") in",picked_year), x="", y="")
P1 + scale_y_continuous(breaks=c()) + scale_x_continuous(breaks=c()) + theme(panel.border =  element_blank())
# plot
# sort so plots without the lines in the map
total <- total[order(total$order),]
p <- ggplot()
p <- p + geom_polygon(data=total, aes(x=long, y=lat, group = group, fill=total$count),colour="white"
) + scale_fill_distiller(palette="Blues", labels = percent,
breaks = pretty_breaks(n = 10)) +  guides(fill = guide_legend(reverse = TRUE))
P1 <- p + theme_bw()  + labs(fill = "New Births"
,title = paste("Count of Name",picked_name,"(",picked_sex,") in",picked_year), x="", y="")
P1 + scale_y_continuous(breaks=c()) + scale_x_continuous(breaks=c()) + theme(panel.border =  element_blank())
total <- total[order(total$order),]
p <- ggplot()
p <- p + geom_polygon(data=total, aes(x=long, y=lat, group = group, fill=total$count),colour="white"
) + scale_fill_distiller(palette="Blues", labels = percent,
breaks = pretty_breaks(n = 2)) +  guides(fill = guide_legend(reverse = TRUE))
P1 <- p + theme_bw()  + labs(fill = "New Births"
,title = paste("Count of Name",picked_name,"(",picked_sex,") in",picked_year), x="", y="")
P1 + scale_y_continuous(breaks=c()) + scale_x_continuous(breaks=c()) + theme(panel.border =  element_blank())
total <- total[order(total$order),]
p <- ggplot()
p <- p + geom_polygon(data=total, aes(x=long, y=lat, group = group, fill=total$count),colour="white"
) + scale_fill_distiller(palette="Blues") +  guides(fill = guide_legend(reverse = TRUE))
P1 <- p + theme_bw()  + labs(fill = "New Births"
,title = paste("Count of Name",picked_name,"(",picked_sex,") in",picked_year), x="", y="")
P1 + scale_y_continuous(breaks=c()) + scale_x_continuous(breaks=c()) + theme(panel.border =  element_blank())
# sort so plots without the lines in the map
total <- total[order(total$order),]
p <- ggplot()
p <- p + geom_polygon(data=total, aes(x=long, y=lat, group = group, fill=total$count),colour="Black"
) + scale_fill_distiller(palette="Blues") +  guides(fill = guide_legend(reverse = TRUE))
P1 <- p + theme_bw()  + labs(fill = "New Births"
,title = paste("Count of Name",picked_name,"(",picked_sex,") in",picked_year), x="", y="")
P1 + scale_y_continuous(breaks=c()) + scale_x_continuous(breaks=c()) + theme(panel.border =  element_blank())
picked_name <- "Sara"
picked_year <- 1980
picked_sex <- "F"
selected_name_and_yr <- subset(dt, name==picked_name & year==picked_year & sex==picked_sex)
total <- merge(all_states_w_abbrev, selected_name_and_yr, by="state")
# plot
# sort so plots without the lines in the map
total <- total[order(total$order),]
p <- ggplot()
p <- p + geom_polygon(data=total, aes(x=long, y=lat, group = group, fill=total$count),colour="Black"
) + scale_fill_distiller(palette="Blues") +  guides(fill = guide_legend(reverse = TRUE))
P1 <- p + theme_bw()  + labs(fill = "New Births"
,title = paste("Count of Name",picked_name,"(",picked_sex,") in",picked_year), x="", y="")
P1 + scale_y_continuous(breaks=c()) + scale_x_continuous(breaks=c()) + theme(panel.border =  element_blank())
total <- total[order(total$order),]
p <- ggplot()
p <- p + geom_polygon(data=total, aes(x=long, y=lat, group = group, fill=total$count),colour="Black"
) + scale_fill_distiller(palette="Blues") +  guides(fill = guide_legend(reverse = FALSE))
P1 <- p + theme_bw()  + labs(fill = "New Births"
,title = paste("Count of Name",picked_name,"(",picked_sex,") in",picked_year), x="", y="")
P1 + scale_y_continuous(breaks=c()) + scale_x_continuous(breaks=c()) + theme(panel.border =  element_blank())
total <- total[order(total$order),]
p <- ggplot()
p <- p + geom_polygon(data=total, aes(x=long, y=lat, group = group, fill=total$count),colour="Black"
) + scale_fill_distiller(palette="Blues") +  guides(fill = guide_legend(reverse = TRUE))
P1 <- p + theme_bw()  + labs(fill = "New Births"
,title = paste("Count of Name",picked_name,"(",picked_sex,") in",picked_year), x="", y="")
P1 + scale_y_continuous(breaks=c()) + scale_x_continuous(breaks=c()) + theme(panel.border =  element_blank())
# sort so plots without the lines in the map
total <- total[order(total$order),]
p <- ggplot()
p <- p + geom_polygon(data=total, aes(x=long, y=lat, group = group, fill=total$count),colour="Black"
) + scale_fill_distiller(palette="Greens") +  guides(fill = guide_legend(reverse = TRUE))
P1 <- p + theme_bw()  + labs(fill = "New Births"
,title = paste("Count of Name",picked_name,"(",picked_sex,") in",picked_year), x="", y="")
P1 + scale_y_continuous(breaks=c()) + scale_x_continuous(breaks=c()) + theme(panel.border =  element_blank())
total <- total[order(total$order),]
p <- ggplot()
p <- p + geom_polygon(data=total, aes(x=long, y=lat, group = group, fill=total$count),colour="Black"
) + scale_fill_distiller(palette="Greens", labels = count,
breaks = pretty_breaks(n = 10)) +  guides(fill = guide_legend(reverse = TRUE))
P1 <- p + theme_bw()  + labs(fill = "New Births"
,title = paste("Count of Name",picked_name,"(",picked_sex,") in",picked_year), x="", y="")
P1 + scale_y_continuous(breaks=c()) + scale_x_continuous(breaks=c()) + theme(panel.border =  element_blank())
total <- total[order(total$order),]
p <- ggplot()
p <- p + geom_polygon(data=total, aes(x=long, y=lat, group = group, fill=total$count),colour="Black"
) + scale_fill_distiller(palette="Blues") +  guides(fill = guide_legend(reverse = TRUE))
P1 <- p + theme_bw()  + labs(fill = "New Births"
,title = paste("Count of Name",picked_name,"(",picked_sex,") in",picked_year), x="", y="")
P1 + scale_y_continuous(breaks=c()) + scale_x_continuous(breaks=c()) + theme(panel.border =  element_blank())
total <- total[order(total$order),]
p <- ggplot()
p <- p + geom_polygon(data=total, aes(x=long, y=lat, group = group, fill=total$count),colour="Black"
) + scale_fill_distiller(palette="Blues") +  guides(fill = guide_legend(reverse = TRUE))
P1 <- p + theme_bw()  + labs(fill = "New Births"
,title = paste("Count of Name",picked_name,"(",picked_sex,") in",picked_year), x="", y="")
P1 + scale_y_continuous(breaks=c()) + scale_x_continuous(breaks=c()) + theme(panel.border =  element_blank())
